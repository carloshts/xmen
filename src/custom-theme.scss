// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$xmen-primary: mat.define-palette(mat.$indigo-palette,900);
$xmen-accent: mat.define-palette(mat.$yellow-palette,A700);

// The warn palette is optional (defaults to red).
$xmen-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$xmen-theme: mat.define-dark-theme((
  color: (
    primary: $xmen-primary,
    accent: $xmen-accent,
    warn: $xmen-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($xmen-theme);

// Import material theming functions
@import '~@angular/material/theming';

// Copy the palettes from your selected theme (usually theme.scss).
$app-primary: mat-palette($mat-indigo,900);
$app-accent: mat-palette($mat-yellow);
$app-warn: mat-palette($mat-red);
$app-body: mat-palette($mat-indigo,A700);
// Create your Sass color vars (will be available in all the project)
$primary: mat-color($app-primary);
$accent: mat-color($app-accent);
$warn: mat-color($app-warn);
$body: mat-color($app-body);
